name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: MIIxAQYJKoZIhvcNAQcCoIIw8jCCMO4CAQExCzAJBgUrDgMCGgUAMIIhDgYJKoZIhvcNAQcBoIIg/wSCIPs8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8IURPQ1RZUEUgcGxpc3QgUFVCTElDICItLy9BcHBsZS8vRFREIFBMSVNUIDEuMC8vRU4iICJodHRwOi8vd3d3LmFwcGxlLmNvbS9EVERzL1Byb3BlcnR5TGlzdC0xLjAuZHRkIj4KPHBsaXN0IHZlcnNpb249IjEuMCI+CjxkaWN0PgoJPGtleT5BcHBJRE5hbWU8L2tleT4KCTxzdHJpbmc+Y29tVVhZUVg2Uks5Nzwvc3RyaW5nPgoJPGtleT5BcHBsaWNhdGlvbklkZW50aWZpZXJQcmVmaXg8L2tleT4KCTxhcnJheT4KCTxzdHJpbmc+VVhZUVg2Uks5Nzwvc3RyaW5nPgoJPC9hcnJheT4KCTxrZXk+Q3JlYXRpb25EYXRlPC9rZXk+Cgk8ZGF0ZT4yMDI1LTEwLTE1VDA0OjEzOjQ2WjwvZGF0ZT4KCTxrZXk+UGxhdGZvcm08L2tleT4KCTxhcnJheT4KCQk8c3RyaW5nPmlPUzwvc3RyaW5nPgoJCTxzdHJpbmc+eHJPUzwvc3RyaW5nPgoJCTxzdHJpbmc+dmlzaW9uT1M8L3N0cmluZz4KCTwvYXJyYXk+Cgk8a2V5PklzWGNvZGVNYW5hZ2VkPC9rZXk+Cgk8ZmFsc2UvPgoJPGtleT5EZXZlbG9wZXJDZXJ0aWZpY2F0ZXM8L2tleT4KCTxhcnJheT4KCQk8ZGF0YT5NSUlGeHpDQ0JLK2dBd0lCQWdJUU15ZHhvajRTVTErSFRESm1Gb2ROS1RBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSTFNVEF4TlRBME1EQXpOMW9YRFRJMk1UQXhOVEEwTURBek5sb3dnWTB4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBWV0ZsUldEWlNTemszTVRZd05BWURWUVFEREMxQmNIQnNaU0JFYVhOMGNtbGlkWFJwYjI0NklFaDFJRmhwWVc1emFHVnVaeUFvVlZoWlVWZzJVa3M1TnlreEV6QVJCZ05WQkFzTUNsVllXVkZZTmxKTE9UY3hGVEFUQmdOVkJBb01ERWgxSUZocFlXNXphR1Z1WnpFTE1Ba0dBMVVFQmhNQ1EwNHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDWkU2c0Jnelh4L0FNaWEyTytuSDBNdHdQRG9HaGs2WHRuQlUyeEZWTjFrUHU3YUJab2x0Q09XSWgxV3k0eFNFdEFXck5oZ255eC9oT3hNNEN5c3I4SHYxZGJJZE8rNlZqcFhzUmJHa1B1NE5yWGFUcE93clhZakdudTUzSUNURVltTFQ0bXo2UFVFRTFNN213bUl0enBmY0VsUFlYdUZSL3ZwTWI0OUZodFlWU3lxMktsSjI3cldTNlhJWkppazk3a0grcXZ6L1IyVHV3aHY3QzQ4MkFtemxwdWM1UExlN0pOOHFxYzZWTGhRWWZ1SzRIUzJWeXJYMlpVcVJuQlpzdVNrTlB3TSt1cnIwSC9ZdFdFbjcvK1FhS2xCRS95d1Fid0xTajBxMndCd2Noc011ZE5SQitwYklROFdFd1pJR01nTlViQ2w5ck9wTlh5UTN6V2hsc2RBZ01CQUFHamdnSTRNSUlDTkRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkFuK3dCV1ErYTlrQ3BJU3VTWW9Zd3lYN0tleU1IQUdDQ3NHQVFVRkJ3RUJCR1F3WWpBdEJnZ3JCZ0VGQlFjd0FvWWhhSFIwY0RvdkwyTmxjblJ6TG1Gd2NHeGxMbU52YlM5M2QyUnlaek11WkdWeU1ERUdDQ3NHQVFVRkJ6QUJoaVZvZEhSd09pOHZiMk56Y0M1aGNIQnNaUzVqYjIwdmIyTnpjREF6TFhkM1pISm5NekExTUlJQkhnWURWUjBnQklJQkZUQ0NBUkV3Z2dFTkJna3Foa2lHOTJOa0JRRXdnZjh3Z2NNR0NDc0dBUVVGQndJQ01JRzJESUd6VW1Wc2FXRnVZMlVnYjI0Z2RHaHBjeUJqWlhKMGFXWnBZMkYwWlNCaWVTQmhibmtnY0dGeWRIa2dZWE56ZFcxbGN5QmhZMk5sY0hSaGJtTmxJRzltSUhSb1pTQjBhR1Z1SUdGd2NHeHBZMkZpYkdVZ2MzUmhibVJoY21RZ2RHVnliWE1nWVc1a0lHTnZibVJwZEdsdmJuTWdiMllnZFhObExDQmpaWEowYVdacFkyRjBaU0J3YjJ4cFkza2dZVzVrSUdObGNuUnBabWxqWVhScGIyNGdjSEpoWTNScFkyVWdjM1JoZEdWdFpXNTBjeTR3TndZSUt3WUJCUVVIQWdFV0syaDBkSEJ6T2k4dmQzZDNMbUZ3Y0d4bExtTnZiUzlqWlhKMGFXWnBZMkYwWldGMWRHaHZjbWwwZVM4d0ZnWURWUjBsQVFIL0JBd3dDZ1lJS3dZQkJRVUhBd013SFFZRFZSME9CQllFRk4yWTc5M3M4UHJBZ3ArZEJ0WTJFSVdmamtlQU1BNEdBMVVkRHdFQi93UUVBd0lIZ0RBVEJnb3Foa2lHOTJOa0JnRUhBUUgvQkFJRkFEQVRCZ29xaGtpRzkyTmtCZ0VFQVFIL0JBSUZBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBS1ZYR2JLVUpTNzE4MDRoKzBUekhtOVQ4YzNJZmNwb041Q2xNbmtaL2d1aEVXeFVkMFNCRmdDc0pQUDBZekF3eUpSUFlDd2RwVE1ieFl1M0srRitTVHdlUkg1U3hWUUEvRFVCZDc4U1UrT0xzUGFCSVRTMjlCejV4Z2wyUlp3WlIzMDd3TGdXYTV5NWI1eFZNOTkzcy9SWno3b0pJQldYWU9BMTBHbE95dlZzd2dWMm01L3lTY2NZeXR3R0hxVW9QUXJJenVyaldzWlhSYlQ4ZkYwcjNseGNVN0RFRk95OWV1L2JwTWJjVWdQV1FsMWVYVThJNjlQMXFmemV5UWZLUU9mRnJUVCtGOE84aWNCTGpWeFlQNFB3bGtKT1Rxc0lxRFEzTHFURUx3N1NGNmg4clM4L3M5UDhGdGJGbTFHZlZtQlE4VlFqS0RmQmo4MzdDOFFQZGRRPT08L2RhdGE+Cgk8L2FycmF5PgoKCTxrZXk+REVSLUVuY29kZWQtUHJvZmlsZTwva2V5PgoJPGRhdGE+TUlJTm1nWUpLb1pJaHZjTkFRY0NvSUlOaXpDQ0RZY0NBUUV4RFRBTEJnbGdoa2dCWlFNRUFnRXdnZ05iQmdrcWhraUc5dzBCQndHZ2dnTk1CSUlEU0RHQ0EwUXdEQXdIVm1WeWMybHZiZ0lCQVRBTkRBaFFVRkZEYUdWamF3RUJBREFRREFwVWFXMWxWRzlNYVhabEFnSUJiREFUREE1SmMxaGpiMlJsVFdGdVlXZGxaQUVCQURBWURBaFVaV0Z0VG1GdFpRd01TSFVnV0dsaGJuTm9aVzVuTUJvTUNVRndjRWxFVG1GdFpRd05ZMjl0VlZoWlVWZzJVa3M1TnpBZERBeERjbVZoZEdsdmJrUmhkR1VYRFRJMU1UQXhOVEEwTVRNME5sb3dIZ3dPVkdWaGJVbGtaVzUwYVdacFpYSXdEQXdLVlZoWlVWZzJVa3M1TnpBZkRBNUZlSEJwY21GMGFXOXVSR0YwWlJjTk1qWXhNREUxTURRd01ETTJXakFnREJkUWNtOW1hV3hsUkdsemRISnBZblYwYVc5dVZIbHdaUXdGVTFSUFVrVXdJUXdJVUd4aGRHWnZjbTB3RlF3RGFVOVREQVI0Y2s5VERBaDJhWE5wYjI1UFV6QWlEQVJPWVcxbERCcGpiMjFWV0ZsUldEWlNTemszWDJScGMxOHlNREkxTVRBeE5UQXJEQnRCY0hCc2FXTmhkR2x2Ymtsa1pXNTBhV1pwWlhKUWNtVm1hWGd3REF3S1ZWaFpVVmcyVWtzNU56QXNEQVJWVlVsRURDUmtOMkl6TkROaU1pMWpaVGhrTFRRek1EWXRPRFpqWWkwNFl6VTBOVFUyTUdRNU9UZ3dPd3dWUkdWMlpXeHZjR1Z5UTJWeWRHbG1hV05oZEdWek1DSUVJRkpZeFZCcE5kNWtpeHJuNWlVbXdTdmNDcXp0WGVlSkVDVGJ2ZUlkTm1mbU1JSUJaUXdNUlc1MGFYUnNaVzFsYm5SemNJSUJVd0lCQWJDQ0FVd3dNd3dXWVhCd2JHbGpZWFJwYjI0dGFXUmxiblJwWm1sbGNnd1pWVmhaVVZnMlVrczVOeTVqYjIwdVZWaFpVVmcyVWtzNU56QWREQTloY0hNdFpXNTJhWEp2Ym0xbGJuUU1DbkJ5YjJSMVkzUnBiMjR3R0F3VFltVjBZUzF5WlhCdmNuUnpMV0ZqZEdsMlpRRUIvekFzREI5amIyMHVZWEJ3YkdVdVpHVjJaV3h2Y0dWeUxtRndjR3hsYzJsbmJtbHVNQWtNQjBSbFptRjFiSFF3S3d3bVkyOXRMbUZ3Y0d4bExtUmxkbVZzYjNCbGNpNWhjM052WTJsaGRHVmtMV1J2YldGcGJuTU1BU293TVF3alkyOXRMbUZ3Y0d4bExtUmxkbVZzYjNCbGNpNTBaV0Z0TFdsa1pXNTBhV1pwWlhJTUNsVllXVkZZTmxKTE9UY3dFd3dPWjJWMExYUmhjMnN0WVd4c2IzY0JBUUF3T1F3V2EyVjVZMmhoYVc0dFlXTmpaWE56TFdkeWIzVndjekFmREF4VldGbFJXRFpTU3prM0xpb01EMk52YlM1aGNIQnNaUzUwYjJ0bGJxQ0NDRHd3Z2dKRE1JSUJ5YUFEQWdFQ0FnZ3R4ZnlJMHNWTGxUQUtCZ2dxaGtqT1BRUURBekJuTVJzd0dRWURWUVFEREJKQmNIQnNaU0JTYjI5MElFTkJJQzBnUnpNeEpqQWtCZ05WQkFzTUhVRndjR3hsSUVObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUjVNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVFzd0NRWURWUVFHRXdKVlV6QWVGdzB4TkRBME16QXhPREU1TURaYUZ3MHpPVEEwTXpBeE9ERTVNRFphTUdjeEd6QVpCZ05WQkFNTUVrRndjR3hsSUZKdmIzUWdRMEVnTFNCSE16RW1NQ1FHQTFVRUN3d2RRWEJ3YkdVZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGt4RXpBUkJnTlZCQW9NQ2tGd2NHeGxJRWx1WXk0eEN6QUpCZ05WQkFZVEFsVlRNSFl3RUFZSEtvWkl6ajBDQVFZRks0RUVBQ0lEWWdBRW1Pa3ZQVUJ5cE8yVEluS0JFeHpkRUpYeHhhTk9jZHdVRnRrTzVhWUZLbmRrZTE5T09OTzdIRVMxZi9VZnRqSmlYY25waEZ0UE1FOFJXZ0Q5V0ZnTXBmVVBMRTBIUnhOMTJwZVhsMjh4WE8wcm5Yc2dPOWk1Vk5sZW1hUTZVUW94bzBJd1FEQWRCZ05WSFE0RUZnUVV1N0Rlb1ZnemlKcWtpcG5ldnIzcnI5ckxKS3N3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd01EYUFBd1pRSXhBSVBwd2NRV1hocGROQmpaN2UvMGJBNEFSa3U0MzdKR0VjVVAvZVo2aktHbWE4N0NBOVNjOVpQR2RMaHEzNm9qRlFJd2JXYUtFTXJVRGRSUHpZMURQclNLWTZVemJ1TnQyaGUzWkIvSVV5YjVpR0owT1FzWFc4dFJxQXpvR0FQbm9ySW9NSUlDNWpDQ0FtMmdBd0lCQWdJSU13M3UrTDlNYUM0d0NnWUlLb1pJemowRUF3TXdaekViTUJrR0ExVUVBd3dTUVhCd2JHVWdVbTl2ZENCRFFTQXRJRWN6TVNZd0pBWURWUVFMREIxQmNIQnNaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVURVRNQkVHQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVMTUFrR0ExVUVCaE1DVlZNd0hoY05NVGN3TWpJeU1qSXlNekl5V2hjTk16SXdNakU0TURBd01EQXdXakJ5TVNZd0pBWURWUVFEREIxQmNIQnNaU0JUZVhOMFpXMGdTVzUwWldkeVlYUnBiMjRnUTBFZ05ERW1NQ1FHQTFVRUN3d2RRWEJ3YkdVZ1EyVnlkR2xtYVdOaGRHbHZiaUJCZFhSb2IzSnBkSGt4RXpBUkJnTlZCQW9NQ2tGd2NHeGxJRWx1WXk0eEN6QUpCZ05WQkFZVEFsVlRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVCbXVrVm05OW55ZlJ6amFPa2h0V3pWUTJaRXJKbEdpWitza2dmdUwxV0EvYzRtcnJHVWN2THU4N3BBRzBBUk5FZkZvbXJhQ2NLU1dLNWVZR2IwOThXcU9COXpDQjlEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01COEdBMVVkSXdRWU1CYUFGTHV3M3FGWU00aWFwSXFaM3I2OTY2L2F5eVNyTUVZR0NDc0dBUVVGQndFQkJEb3dPREEyQmdnckJnRUZCUWN3QVlZcWFIUjBjRG92TDI5amMzQXVZWEJ3YkdVdVkyOXRMMjlqYzNBd015MWhjSEJzWlhKdmIzUmpZV2N6TURjR0ExVWRId1F3TUM0d0xLQXFvQ2lHSm1oMGRIQTZMeTlqY213dVlYQndiR1V1WTI5dEwyRndjR3hsY205dmRHTmhaek11WTNKc01CMEdBMVVkRGdRV0JCUjZSN280aWhVa1NDSkd6YjZQR2lSN05BTXFhVEFPQmdOVkhROEJBZjhFQkFNQ0FRWXdFQVlLS29aSWh2ZGpaQVlDRVFRQ0JRQXdDZ1lJS29aSXpqMEVBd01EWndBd1pBSXdGUXlwanNhdmxtbHJwNS9kWE5RRFdXeXVVdFJneG90MjRMZkZvdkVKZk9DYTQydXg0M3d4eENkNnA0NkovYXQzQWpCaE15RHhLZi81aHpLdUtjaGtQWFo3VWFUU0FpOTJ2bUFpa2ZIVk9uWGN0T0xHS3BiK3hnbmNTay9WSlBEOHlySXdnZ01ITUlJQ3JhQURBZ0VDQWdnWGdLZzBabVRxeXpBS0JnZ3Foa2pPUFFRREFqQnlNU1l3SkFZRFZRUUREQjFCY0hCc1pTQlRlWE4wWlcwZ1NXNTBaV2R5WVhScGIyNGdRMEVnTkRFbU1DUUdBMVVFQ3d3ZFFYQndiR1VnUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRIa3hFekFSQmdOVkJBb01Da0Z3Y0d4bElFbHVZeTR4Q3pBSkJnTlZCQVlUQWxWVE1CNFhEVEkwTVRFeU1EQXpNakEwTlZvWERUSTRNVEl4TkRFNE1EQXpNRm93VGpFcU1DZ0dBMVVFQXd3aFYxZEVVaUJRY205MmFYTnBiMjVwYm1jZ1VISnZabWxzWlNCVGFXZHVhVzVuTVJNd0VRWURWUVFLREFwQmNIQnNaU0JKYm1NdU1Rc3dDUVlEVlFRR0V3SlZVekJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCUFdVV3c3QjFGUS9HZDVHWUNWZlBvNHB6MnhQazlVY3QzMjJVbDhmNGZ0akFiS0NHNmloVHJUVDdlOVd1UmZVbU0xZ3Q4NU9xYmM2VjNaVDZETkRyMzJqZ2dGUE1JSUJTekFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGSHBIdWppS0ZTUklJa2JOdm84YUpIczBBeXBwTUVFR0NDc0dBUVVGQndFQkJEVXdNekF4QmdnckJnRUZCUWN3QVlZbGFIUjBjRG92TDI5amMzQXVZWEJ3YkdVdVkyOXRMMjlqYzNBd015MWhjMmxqWVRRd016Q0JsZ1lEVlIwZ0JJR09NSUdMTUlHSUJna3Foa2lHOTJOa0JRRXdlekI1QmdnckJnRUZCUWNDQWpCdERHdFVhR2x6SUdObGNuUnBabWxqWVhSbElHbHpJSFJ2SUdKbElIVnpaV1FnWlhoamJIVnphWFpsYkhrZ1ptOXlJR1oxYm1OMGFXOXVjeUJwYm5SbGNtNWhiQ0IwYnlCQmNIQnNaU0JRY205a2RXTjBjeUJoYm1RdmIzSWdRWEJ3YkdVZ2NISnZZMlZ6YzJWekxqQWRCZ05WSFE0RUZnUVU2VkxPRGJER2lCcGxTcmliRVkveDNCNUhGSHd3RGdZRFZSMFBBUUgvQkFRREFnZUFNQThHQ1NxR1NJYjNZMlFNRXdRQ0JRQXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTythdkYyZ1dtWnNaTG5OTjVPcFU3UTN4Y2RzNFlQNkZ4cmVDejNXcTJobUFpQjRJOW5EaUFkSlBmWDdpWStRYmxqZ1Y1OWovMWpoMW85Y21HUFdPajQvblRHQ0FkSXdnZ0hPQWdFQk1INHdjakVtTUNRR0ExVUVBd3dkUVhCd2JHVWdVM2x6ZEdWdElFbHVkR1ZuY21GMGFXOXVJRU5CSURReEpqQWtCZ05WQkFzTUhVRndjR3hsSUVObGNuUnBabWxqWVhScGIyNGdRWFYwYUc5eWFYUjVNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVFzd0NRWURWUVFHRXdKVlV3SUlGNENvTkdaazZzc3dDd1lKWUlaSUFXVURCQUlCb0lIbk1CZ0dDU3FHU0liM0RRRUpBekVMQmdrcWhraUc5dzBCQndFd0hBWUpLb1pJaHZjTkFRa0ZNUThYRFRJMU1UQXhOVEEwTVRNME5sb3dLQVlKS29aSWh2Y05BUWswTVJzd0dUQUxCZ2xnaGtnQlpRTUVBZ0doQ2dZSUtvWkl6ajBFQXdJd0x3WUpLb1pJaHZjTkFRa0VNU0lFSU83T2NTeStwdk9vU3RoSGVzK2FQR294Ump3WCs4L3MwU1VwNVF6ZFRQYkdNRklHQ1NxR1NJYjNEUUVKRHpGRk1FTXdDZ1lJS29aSWh2Y05Bd2N3RGdZSUtvWklodmNOQXdJQ0FnQ0FNQTBHQ0NxR1NJYjNEUU1DQWdGQU1BY0dCU3NPQXdJSE1BMEdDQ3FHU0liM0RRTUNBZ0VvTUFvR0NDcUdTTTQ5QkFNQ0JFWXdSQUlnQ2w1UkEzZ09kZVNKcTFRdWR2OGFhZnBUUVhWSTVRdG81Y2RDQlQzOFNxTUNJRVJxWTQra1FycllCN1VMSW81RVRtNFNQQ00zSVZmdktpQ0xIQ1JGM1p4MzwvZGF0YT4KCQkJCQkJCQkJCQkJCQkJCQkJCgkJCTxrZXk+UFBRQ2hlY2s8L2tleT4KCTxmYWxzZS8+CgoJPGtleT5FbnRpdGxlbWVudHM8L2tleT4KCTxkaWN0PgoJCTxrZXk+YmV0YS1yZXBvcnRzLWFjdGl2ZTwva2V5PgoJCTx0cnVlLz4KCQkJCQoJCQkJPGtleT5hcHMtZW52aXJvbm1lbnQ8L2tleT4KCQk8c3RyaW5nPnByb2R1Y3Rpb248L3N0cmluZz4KCQkJCQoJCQkJPGtleT5jb20uYXBwbGUuZGV2ZWxvcGVyLmFzc29jaWF0ZWQtZG9tYWluczwva2V5PgoJCTxzdHJpbmc+Kjwvc3RyaW5nPgoJCQkJCgkJCQk8a2V5PmFwcGxpY2F0aW9uLWlkZW50aWZpZXI8L2tleT4KCQk8c3RyaW5nPlVYWVFYNlJLOTcuY29tLlVYWVFYNlJLOTc8L3N0cmluZz4KCQkJCQoJCQkJPGtleT5rZXljaGFpbi1hY2Nlc3MtZ3JvdXBzPC9rZXk+CgkJPGFycmF5PgoJCQkJPHN0cmluZz5VWFlRWDZSSzk3Lio8L3N0cmluZz4KCQkJCTxzdHJpbmc+Y29tLmFwcGxlLnRva2VuPC9zdHJpbmc+CgkJPC9hcnJheT4KCQkJCQoJCQkJPGtleT5nZXQtdGFzay1hbGxvdzwva2V5PgoJCTxmYWxzZS8+CgkJCQkKCQkJCTxrZXk+Y29tLmFwcGxlLmRldmVsb3Blci50ZWFtLWlkZW50aWZpZXI8L2tleT4KCQk8c3RyaW5nPlVYWVFYNlJLOTc8L3N0cmluZz4KCQkJCQoJCQkJPGtleT5jb20uYXBwbGUuZGV2ZWxvcGVyLmFwcGxlc2lnbmluPC9rZXk+CgkJPGFycmF5PgoJCQkJPHN0cmluZz5EZWZhdWx0PC9zdHJpbmc+CgkJPC9hcnJheT4KCQkKCTwvZGljdD4KCTxrZXk+RXhwaXJhdGlvbkRhdGU8L2tl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

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/zevo.ipa"
          APPLE_ID: "hellowin66@outlook.com"
          APP_SPECIFIC_PASSWORD: "exlo-zhkn-ciwq-sizb"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
